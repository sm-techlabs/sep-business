name: Release & Deploy to Dev

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run semantic release
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag v1 and v1.2
        if: success()
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $LATEST_TAG"
          echo "VERSION=$LATEST_TAG" >> $GITHUB_ENV

          CLEAN_TAG=${LATEST_TAG#v}
          MAJOR=$(echo $CLEAN_TAG | cut -d. -f1)
          MINOR=$(echo $CLEAN_TAG | cut -d. -f1-2)

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f "v$MINOR"
          git tag -f "v$MAJOR"
          git push origin "v$MINOR" --force
          git push origin "v$MAJOR" --force

      - name: Build app
        run: |
          mkdir dist
          cp -r frontend dist/
          cp -r backend dist/
          tar -czf app.tar.gz -C dist .

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-build
          path: app.tar.gz

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev
    needs: release
    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: release-build
          path: ./release

      - name: Extract artifact
        run: tar -xzf ./release/app.tar.gz -C ./release

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Deploying frontend (version ${{ env.VERSION }})..."
            sudo rm -rf /opt/sep-business/frontend/*
            sudo cp -r $GITHUB_WORKSPACE/release/frontend/* /opt/sep-business/frontend/

            echo "Deploying backend..."
            sudo rm -rf /opt/sep-business/backend/*
            sudo cp -r $GITHUB_WORKSPACE/release/backend/* /opt/sep-business/backend/

            echo "Installing backend dependencies..."
            cd /opt/sep-business/backend/
            npm install --production

            echo "Restarting backend service..."
            sudo systemctl daemon-reload
            sudo systemctl restart sep-business-backend
            sudo systemctl status sep-business-backend
